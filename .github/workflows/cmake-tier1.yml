name: Build (Tier 1 platforms)

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo
  SMARTMONTOOLS_INSTALLER: smartmontools-7.2-1.win32-setup.exe
  SMARTMONTOOLS_URL: https://nav.dl.sourceforge.net/project/smartmontools/smartmontools/7.2/smartmontools-7.2-1.win32-setup.exe


jobs:

  linux-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Update Package Database
      run: sudo apt-get update

    - name: Install Dependencies
      run: sudo apt-get install libpcre3-dev libgtkmm-3.0-dev gettext

    - name: Create Build Directory
      run: cmake -E make_directory build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      env:
        CC: gcc-13
        CXX: g++-13
      run: >
        cmake $GITHUB_WORKSPACE
        -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        -DAPP_BUILD_EXAMPLES=ON
        -DAPP_BUILD_TESTS=ON
        -DAPP_COMPILER_ENABLE_WARNINGS=ON

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE

    - name: Pack (cmake install and make binary package)
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cpack -G TBZ2

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Linux Packages
        path: ${{github.workspace}}/build/gsmartcontrol-*-Linux*.*


  windows-msys2:
    runs-on: windows-latest
    strategy:
      matrix:
        include: [
          { msystem: MINGW64, arch: x86_64 },
          { msystem: MINGW32, arch: i686 }
        ]

    steps:
      - uses: actions/checkout@v3

      - uses: msys2/setup-msys2@v2
        # p7zip is needed to extract smartmontools
        # fontconfig owns /etc/fonts
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: >-
            mingw-w64-${{ matrix.arch }}-gtkmm3
            mingw-w64-${{ matrix.arch }}-pkg-config
            mingw-w64-${{ matrix.arch }}-cmake
            mingw-w64-${{ matrix.arch }}-gcc
            mingw-w64-${{ matrix.arch }}-fontconfig
            mingw-w64-${{ matrix.arch }}-pcre
            make
            p7zip

      - name: Configure CMake
        shell: msys2 {0}
        run: >
          cmake -B build -S "$GITHUB_WORKSPACE" -G "MSYS Makefiles"
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE
          -DAPP_BUILD_EXAMPLES=ON
          -DAPP_BUILD_TESTS=ON
          -DAPP_COMPILER_ENABLE_WARNINGS=ON

      - name: Build
        shell: msys2 {0}
        working-directory: ${{github.workspace}}/build
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{github.workspace}}/build
        shell: msys2 {0}
        run: ctest -C $BUILD_TYPE

      - name: Download Package Requirements
        shell: msys2 {0}
        working-directory: ${{github.workspace}}/build
        run: |
          mkdir smartmontools
          cd smartmontools
          wget $SMARTMONTOOLS_URL

      - name: Extract Package Requirements (64-bit)
        if: ${{ matrix.msystem == 'MINGW64' }}
        shell: msys2 {0}
        working-directory: ${{github.workspace}}/build/smartmontools
        run: >
          7z -bb1 e $SMARTMONTOOLS_INSTALLER
          bin64/smartctl.exe
          bin64/smartctl-nc.exe
          bin/update-smart-drivedb.exe
          bin/drivedb.h

      - name: Extract Package Requirements (32-bit)
        if: ${{ matrix.msystem == 'MINGW32' }}
        shell: msys2 {0}
        working-directory: ${{github.workspace}}/build/smartmontools
        run: >
          7z -bb1 e $SMARTMONTOOLS_INSTALLER
          bin/smartctl.exe
          bin/smartctl-nc.exe
          bin/update-smart-drivedb.exe
          bin/drivedb.h

      - name: Package ZIP
        shell: msys2 {0}
        working-directory: ${{github.workspace}}/build
        run: cpack -G ZIP

      - name: Package NSIS (64-bit)
        if: ${{ matrix.msystem == 'MINGW64' }}
        shell: msys2 {0}
        working-directory: ${{github.workspace}}/build
        run: cpack -G NSIS64

      - name: Package NSIS (32-bit)
        if: ${{ matrix.msystem == 'MINGW32' }}
        shell: msys2 {0}
        working-directory: ${{github.workspace}}/build
        run: cpack -G NSIS

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Windows Packages
          path: ${{github.workspace}}/build/gsmartcontrol-*-win*.*

